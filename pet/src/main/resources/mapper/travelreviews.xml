<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.ssafy.pet.model.mapper.TravelReviewsMapper">
	<insert id="saveReviewImage" parameterType="ReviewImagesDto">
		insert into
		review_images (
		review_id, original_name, stored_name, file_path,
		uploaded_at, is_thumbnail
		)
		values (
		#{review_id}, #{original_name},
		#{stored_name}, #{file_path}, #{uploaded_at},
		#{is_thumbnail}
		);
	</insert>

	<insert id="saveReview" parameterType="TravelReviewsDto">
		insert into travel_reviews (
		title, content, user_id, plan_id,
		dog_size, is_public
		) values (
		#{title}, #{content}, #{user_id},
		#{plan_id},
		#{dog_size}, #{is_public}
		);
		<selectKey order="AFTER" keyProperty="id" keyColumn="id"
			resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<select id="getReviewsWithThumbnail" resultType="map">
		SELECT
		r.*,
		i.stored_name AS stored_name
		FROM
		travel_reviews r
		LEFT JOIN
		review_images i
		ON
		r.id = i.review_id AND i.is_thumbnail = true
		<where>
			<if test="dog_size != 0">
				r.dog_size = #{dog_size}
			</if>
			and r.is_public = 0
		</where>
		<!-- 정렬 조건 -->
		<choose>
			<when test="orderBy == 'date'">
				ORDER BY r.updated_at DESC
			</when>
			<when test="orderBy == 'oldest'">
				ORDER BY r.updated_at ASC
			</when>
			<when test="orderBy == 'view'">
				ORDER BY r.view_cnt DESC
			</when>
			<when test="orderBy == 'favorite'">
				ORDER BY r.favorite_cnt DESC
			</when>
			<otherwise>
				ORDER BY r.updated_at DESC
			</otherwise>
		</choose>
	</select>

	<select id="getReviewImages" resultType="string">
		SELECT
		stored_name
		FROM
		review_images
		WHERE
		review_id = #{review_id}
	</select>

	<!-- 리뷰 id로 상세 조회 -->
	<select id="getReviewDetail" resultType="TravelReviewsDto">
		SELECT
		*
		FROM
		travel_reviews
		WHERE
		id = #{id}
	</select>

	<!-- view_cnt 증가 -->
	<update id="incrementViewCount">
		UPDATE travel_reviews
		SET view_cnt = view_cnt + 1
		WHERE id = #{id}
	</update>
	

	<insert id="insertFavorite">
		INSERT INTO reviews_favorite (review_id, user_id)
		VALUES (#{reviewId}, #{userId});
	</insert>
	<delete id="deleteFavorite">
		DELETE FROM reviews_favorite
		WHERE review_id = #{reviewId} AND user_id = #{userId};
	</delete>

	<select id="checkLiked" resultType="int" parameterType="map">
		select count(*)
		from reviews_favorite where review_id = #{reviewId} and user_id = #{userId}
	</select>

</mapper>